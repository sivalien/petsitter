plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
//	id 'nu.studer.jooq' version '9.0'
}

group = 'com.'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	runtimeOnly 'org.postgresql:postgresql'
//	jooqGenerator 'org.postgresql:postgresql:42.5.4'
	implementation 'org.jooq:jooq'
	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


//jooq {
//	version = '3.19.1'  // the default (can be omitted)
//	edition = nu.studer.gradle.jooq.JooqEdition.OSS  // the default (can be omitted)
//
//	configurations {
//		main {  // name of the jOOQ configuration
//			generateSchemaSourceOnCompilation = true  // default (can be omitted)
//
//			generationTool {
////				logging = Logging.WARN
//				jdbc {
//					driver = 'org.postgresql.Driver'
//					url = 'jdbc:postgresql://localhost:5433/petsitters?ssl=true&&sslfactory=org.postgresql.ssl.NonValidatingFactory'
//					user = 'postgres'
//					password = 'ugviv'
//					properties {
//						property {
//							key = 'ssl'
//							value = 'true'
//						}
//					}
//				}
//				generator {
//					name = 'org.jooq.codegen.DefaultGenerator'
//					database {
//						name = 'org.jooq.meta.postgres.PostgresDatabase'
//						inputSchema = 'public'
//						forcedTypes {
//							forcedType {
//								name = 'varchar'
//								includeExpression = '.*'
//								includeTypes = 'JSONB?'
//							}
//							forcedType {
//								name = 'varchar'
//								includeExpression = '.*'
//								includeTypes = 'INET'
//							}
//						}
//					}
//					generate {
//						deprecated = false
//						records = true
//						immutablePojos = true
//						fluentSetters = true
//					}
//					target {
//						packageName = 'nu.studer.sample'
//						directory = 'build/generated-src/jooq/main'  // default (can be omitted)
//					}
//					strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
//				}
//			}
//		}
//	}
//}

//tasks.named('generateJooq').configure { allInputsDeclared = true }

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
